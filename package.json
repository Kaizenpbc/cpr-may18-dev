{
  "name": "cpr-may18",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "npm run dev:clean && node dev.js",
    "dev:clean": "npm run cleanup && npm run kill-ports && timeout /t 3 /nobreak && npm run check-ports",
    "cleanup": "taskkill /f /im node.exe 2>nul || echo 'No node processes to kill'",
    "kill-ports": "for /f \"tokens=5\" %a in ('netstat -aon ^| findstr :3001') do taskkill /f /pid %a 2>nul || echo 'Port 3001 is free'",
    "kill-frontend": "for /f \"tokens=5\" %a in ('netstat -aon ^| findstr :5173') do taskkill /f /pid %a 2>nul || echo 'Port 5173 is free' && for /f \"tokens=5\" %a in ('netstat -aon ^| findstr :5174') do taskkill /f /pid %a 2>nul || echo 'Port 5174 is free'",
    "check-ports": "netstat -an | findstr :3001 || echo 'Port 3001 is available'",
    "start": "cd backend && npm run build && node dist/index.js",
    "build": "tsc",
    "test": "jest",
    "db:init": "cd backend && npm run db:init",
    "db:reset": "cd backend && npm run db:reset",
    "db:status": "cd backend && npm run db:status",
    "stable:start": "npm run cleanup && npm run kill-ports && timeout /t 2 /nobreak && npm run start",
    "stable:dev": "npm run cleanup && npm run kill-ports && timeout /t 2 /nobreak && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "monitor": "node monitor-servers.js",
    "monitor:clean": "npm run dev:clean && node monitor-servers.js",
    "stop": "npm run cleanup && npm run kill-ports && npm run check-ports",
    "security:scan": "node scripts/security-scan.js",
    "security:audit": "npm audit --audit-level=moderate && cd backend && npm audit --audit-level=moderate && cd ../frontend && npm audit --audit-level=moderate",
    "security:fix": "npm audit fix && cd backend && npm audit fix && cd ../frontend && npm audit fix",
    "security:ci": "audit-ci --config audit-ci.json",
    "ssl:generate": "node scripts/generate-ssl-certs.js",
    "ssl:check": "openssl x509 -in ssl/server.crt -text -noout",
    "config:generate": "node scripts/config-manager.js generate",
    "config:validate": "node scripts/config-manager.js validate",
    "config:secrets": "node scripts/config-manager.js secrets",
    "config:list": "node scripts/config-manager.js list",
    "prod:validate": "node scripts/validate-production.js",
    "prod:deploy": "node scripts/deploy-production.js",
    "ci:deploy": "node scripts/deploy-ci-cd.js",
    "test:integration": "docker-compose -f docker-compose.test.yml up --abort-on-container-exit",
    "test:coverage": "jest --coverage",
    "lint": "eslint . --ext .js,.ts,.tsx",
    "format:check": "prettier --check .",
    "format:fix": "prettier --write .",
    "docker:build": "bash scripts/docker-build.sh",
    "docker:deploy": "bash scripts/docker-deploy.sh",
    "docker:deploy:dev": "bash scripts/docker-deploy.sh development",
    "docker:deploy:prod": "bash scripts/docker-deploy.sh production",
    "docker:up": "docker-compose up -d",
    "docker:up:dev": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:down": "docker-compose down",
    "docker:down:dev": "docker-compose -f docker-compose.dev.yml down",
    "docker:logs": "docker-compose logs -f",
    "docker:logs:dev": "docker-compose -f docker-compose.dev.yml logs -f",
    "docker:clean": "docker-compose down -v && docker system prune -f",
    "docker:status": "docker-compose ps",
    "prepare": "husky"
  },
  "workspaces": [
    "frontend",
    "backend"
  ],
  "devDependencies": {
    "@faker-js/faker": "^9.9.0",
    "@playwright/test": "^1.53.0",
    "@types/jest": "^30.0.0",
    "@types/supertest": "^6.0.3",
    "audit-ci": "^7.1.0",
    "axios": "^1.11.0",
    "chalk": "^4.1.2",
    "concurrently": "^9.1.2",
    "husky": "^9.1.7",
    "jest": "^30.0.4",
    "lint-staged": "^16.1.2",
    "playwright": "^1.53.0",
    "snyk": "^1.1299.0",
    "supertest": "^7.1.1",
    "ts-jest": "^29.4.0"
  },
  "dependencies": {
    "@types/multer": "^2.0.0",
    "date-fns": "^4.1.0",
    "jsonwebtoken": "^9.0.2",
    "multer": "^2.0.1"
  }
}
